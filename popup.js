console.log('popup.js –∑–∞–≥—Ä—É–∂–µ–Ω');

document.addEventListener('DOMContentLoaded', function() {
  console.log('DOMContentLoaded —Å—Ä–∞–±–æ—Ç–∞–ª');
  
  // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV
  const csvFileInput = document.getElementById('csv-file-input');
  const csvFileInfo = document.getElementById('csv-file-info');
  const processCsvButton = document.getElementById('process-csv-button');
  const fillMultipleKizButton = document.getElementById('fill-multiple-kiz-button');
  const statusDiv = document.getElementById('status');
  const progressContainer = document.getElementById('progress-container');
  const progressDetails = document.getElementById('progress-details');

  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ö–ò–ó
  let globalKizValues = [];

  // –°–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç content.js
  chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {
    console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ popup:', message);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
    if (message.type === "PROGRESS_UPDATE") {
      addProgressMessage(message.message);
    }
    
    return true;
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
  function addProgressMessage(message) {
    const messageElement = document.createElement('p');
    messageElement.textContent = message;
    messageElement.style.margin = '5px 0';
    messageElement.style.borderBottom = '1px dashed #ddd';
    messageElement.style.paddingBottom = '5px';
    
    progressDetails.appendChild(messageElement);
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    progressDetails.scrollTop = progressDetails.scrollHeight;
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤–∏–¥–∏–º
    progressContainer.style.display = 'block';
    
    // –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log(message);
  }
  
  // –û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
  function clearProgressMessages() {
    progressDetails.innerHTML = '';
    progressContainer.style.display = 'none';
  }

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
  function showStatus(message, type) {
    statusDiv.textContent = message;
    statusDiv.className = type;
    statusDiv.style.display = 'block';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if (type === 'success') {
      setTimeout(() => {
        if (statusDiv.textContent === message) {
          statusDiv.style.display = 'none';
        }
      }, 10000);
    }
  }
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
  function formatFileSize(bytes) {
    if (bytes < 1024) {
      return bytes + ' –±–∞–π—Ç';
    } else if (bytes < 1024 * 1024) {
      return (bytes / 1024).toFixed(1) + ' –ö–ë';
    } else {
      return (bytes / (1024 * 1024)).toFixed(1) + ' –ú–ë';
    }
  }
  
  // –°–ª—É—à–∞—Ç–µ–ª—å –≤—ã–±–æ—Ä–∞ CSV —Ñ–∞–π–ª–∞
  csvFileInput.addEventListener('change', function(event) {
    const file = event.target.files[0];
    if (!file) {
      csvFileInfo.textContent = '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω';
      processCsvButton.disabled = true;
      return;
    }
    
    if (!file.name.endsWith('.csv') && !file.name.endsWith('.txt')) {
      showStatus('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª CSV –∏–ª–∏ TXT', 'error');
      csvFileInfo.textContent = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞';
      processCsvButton.disabled = true;
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    csvFileInfo.textContent = `${file.name} (${formatFileSize(file.size)})`;
    processCsvButton.disabled = false;
  });
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ä–∞–∑–±–æ—Ä–∞ CSV-—Å—Ç—Ä–æ–∫–∏ —Å —É—á–µ—Ç–æ–º –∑–∞–ø—è—Ç—ã—Ö –∏ –∫–∞–≤—ã—á–µ–∫
  function parseCSVLine(line) {
    const result = [];
    let currentValue = '';
    let insideQuotes = false;
    
    for (let i = 0; i < line.length; i++) {
      const char = line[i];
      
      if (char === '"') {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–∞–≤—ã—á–∫–æ–π (–¥–≤–æ–π–Ω–∞—è –∫–∞–≤—ã—á–∫–∞)
        if (i + 1 < line.length && line[i + 1] === '"' && insideQuotes) {
          currentValue += '"'; // –î–æ–±–∞–≤–ª—è–µ–º –æ–¥–Ω—É –∫–∞–≤—ã—á–∫—É –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–≤–æ–π–Ω–æ–π –∫–∞–≤—ã—á–∫–∏
          i++; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –∫–∞–≤—ã—á–∫—É
        } else {
          insideQuotes = !insideQuotes; // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–∞–≤—ã—á–µ–∫
        }
      } else if (char === ',' && !insideQuotes) {
        // –ó–∞–ø—è—Ç–∞—è –≤–Ω–µ –∫–∞–≤—ã—á–µ–∫ –æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ–Ω–µ—Ü –∑–Ω–∞—á–µ–Ω–∏—è
        result.push(currentValue);
        currentValue = '';
      } else {
        currentValue += char;
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    result.push(currentValue);
    
    return result;
  }
  
  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä—è–º–æ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
  const resultsContainer = document.createElement('div');
  resultsContainer.className = 'csv-results';
  document.body.appendChild(resultsContainer);
  resultsContainer.style.display = 'none';
  
  // –°–ª—É—à–∞—Ç–µ–ª—å –∫–Ω–æ–ø–∫–∏ "–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª"
  processCsvButton.addEventListener('click', function() {
    console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª"');
    
    // –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–¥—ã–¥—É—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    resultsContainer.innerHTML = '';
    resultsContainer.style.display = 'none';
    
    // –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
    clearProgressMessages();
    
    // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ö–ò–ó
    fillMultipleKizButton.disabled = true;
    
    const file = csvFileInput.files[0];
    if (!file) {
      showStatus('–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω', 'error');
      return;
    }
    
    showStatus('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞...', 'info');
    processCsvButton.disabled = true;
    processCsvButton.textContent = '–û–±—Ä–∞–±–æ—Ç–∫–∞...';
    
    const reader = new FileReader();
    
    reader.onload = function(e) {
      console.log('üìÑ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω');
      const contents = e.target.result;
      const fileName = file.name;
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ (–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏ —Ñ–æ—Ä–º–∞—Ç)
      const kizValues = processFileContents(contents, fileName);
      
      if (kizValues.length === 0 || kizValues[0].values.length === 0) {
        showStatus('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–π –ö–ò–ó –≤ —Ñ–∞–π–ª–µ', 'error');
        processCsvButton.disabled = false;
        processCsvButton.textContent = '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª';
        return;
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ö–ò–ó –≥–ª–æ–±–∞–ª—å–Ω–æ
      globalKizValues = kizValues;
      
      // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö –ö–ò–ó
      const totalValues = kizValues.reduce((total, row) => total + row.values.length, 0);
      showStatus(`–ù–∞–π–¥–µ–Ω–æ ${totalValues} –∑–Ω–∞—á–µ–Ω–∏–π –ö–ò–ó`, 'success');
      addProgressMessage(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ ${totalValues} –∑–Ω–∞—á–µ–Ω–∏–π –ö–ò–ó`);
      
      // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π –ö–ò–ó
      fillMultipleKizButton.disabled = false;
      processCsvButton.disabled = false;
      processCsvButton.textContent = '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª';
      
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
      resultsContainer.innerHTML = '';
      resultsContainer.style.display = 'block';
      
      const resultsHeader = document.createElement('h3');
      resultsHeader.textContent = '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:';
      resultsHeader.style.fontSize = '14px';
      resultsHeader.style.marginTop = '15px';
      resultsHeader.style.marginBottom = '5px';
      resultsContainer.appendChild(resultsHeader);
      
      const exampleHeader = document.createElement('p');
      exampleHeader.textContent = '–ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ö–ò–ó:';
      exampleHeader.style.fontSize = '12px';
      exampleHeader.style.margin = '5px 0';
      resultsContainer.appendChild(exampleHeader);
      
      const exampleList = document.createElement('ul');
      const limit = Math.min(5, kizValues.length);
      
      for (let i = 0; i < limit; i++) {
        const kizRow = kizValues[i];
        if (kizRow.values.length > 0) {
          const item = document.createElement('li');
          item.textContent = `–°—Ç—Ä–æ–∫–∞ ${i + 1}: ${kizRow.values[0]}${kizRow.values.length > 1 ? ` (+ –µ—â—ë ${kizRow.values.length - 1})` : ''}`;
          exampleList.appendChild(item);
        }
      }
      
      resultsContainer.appendChild(exampleList);
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ –≤–æ–∑–º–æ–∂–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
      const warningMessage = document.createElement('p');
      warningMessage.innerHTML = '<strong>–í–∞–∂–Ω–æ:</strong> –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–æ–ª—è –ö–ò–ó", –∑–Ω–∞—á–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É. ' +
        '–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è (–¥–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç), –Ω–æ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.';
      warningMessage.style.fontSize = '12px';
      warningMessage.style.marginTop = '10px';
      warningMessage.style.padding = '8px';
      warningMessage.style.backgroundColor = '#fff3e0';
      warningMessage.style.border = '1px solid #ffcc80';
      warningMessage.style.borderRadius = '4px';
      
      resultsContainer.appendChild(warningMessage);
    };
    
    reader.onerror = function(error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
      showStatus('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞', 'error');
      processCsvButton.disabled = false;
      processCsvButton.textContent = '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª';
    };
    
    reader.readAsText(file, 'UTF-8'); // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–æ–ª—è –ö–ò–ó –∏–∑ CSV"
  fillMultipleKizButton.addEventListener('click', function() {
    console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–æ–ª—è –ö–ò–ó –∏–∑ CSV"');
    addProgressMessage('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –ö–ò–ó...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    if (globalKizValues.length === 0 || !globalKizValues[0].values || globalKizValues[0].values.length === 0) {
      showStatus('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ö–ò–ó –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π', 'error');
      addProgressMessage('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ö–ò–ó –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –ö–ò–ó –∏–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    const kizValues = globalKizValues[0].values;
    console.log('–í—ã–±—Ä–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–π –ö–ò–ó –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:', kizValues.length);
    addProgressMessage(`–ù–∞–π–¥–µ–Ω–æ ${kizValues.length} –∑–Ω–∞—á–µ–Ω–∏–π –ö–ò–ó –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    chrome.tabs.query({ active: true, currentWindow: true }, function(tabs) {
      const activeTab = tabs[0];
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ URL —Å–∞–π—Ç—É clothes.crpt.ru
      if (!activeTab.url.includes('clothes.crpt.ru')) {
        showStatus('–≠—Ç–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∞–π—Ç–µ clothes.crpt.ru', 'error');
        addProgressMessage('‚ö†Ô∏è –û—à–∏–±–∫–∞: —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∞–π—Ç–µ clothes.crpt.ru');
        return;
      }
      
      addProgressMessage('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –ö–ò–ó
      chrome.tabs.sendMessage(activeTab.id, {
        type: "CREATE_AND_FILL_KIZ_FIELDS",
        kizValues: kizValues
      }, function(response) {
        if (chrome.runtime.lastError) {
          showStatus('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', 'error');
          addProgressMessage('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
        } else if (response && response.success) {
          showStatus(`–£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ ${response.filledCount} –ø–æ–ª–µ–π –ö–ò–ó`, 'success');
          addProgressMessage(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ ${response.filledCount} –ø–æ–ª–µ–π –ö–ò–ó`);
        } else {
          showStatus('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—è –ö–ò–ó –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ', 'error');
          addProgressMessage('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—è –ö–ò–ó');
        }
      });
    });
  });
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ (–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ñ–∞–π–ª–∞ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ)
  function processFileContents(contents, fileName) {
    console.log('üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞...');
    
    // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥ –Ω–∞—á–∞–ª–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    console.log('–ü–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤ —Ñ–∞–π–ª–∞:', contents.substring(0, 50));
    
    const lines = contents.split(/\r?\n/).filter(line => line.trim() !== '');
    console.log(`üìä –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω, –≤—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${lines.length}`);
    addProgressMessage(`–§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω, –≤—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${lines.length}`);
    
    if (lines.length === 0) {
      showStatus('–§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö', 'error');
      processCsvButton.disabled = false;
      processCsvButton.textContent = '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª';
      return;
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞
    let isTxtFile = fileName.endsWith('.txt');
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
    // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—è—Ç—ã–µ, –∫–∞–≤—ã—á–∫–∏ –∏–ª–∏ –∏–º–µ–µ—Ç –¥—Ä—É–≥–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ CSV
    const csvIndicators = lines[0].includes('–ö–ò–ó');
    const isCsvFormat = csvIndicators || (!isTxtFile && lines[0].includes('–∫–∏–∑'));
    
    console.log(`–û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: ${isCsvFormat ? 'CSV' : 'TXT'}`);
    addProgressMessage(`–û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: ${isCsvFormat ? 'CSV' : 'TXT'}`);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞
    let kizValues = [];
    
    if (isCsvFormat) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ CSV —Ñ–æ—Ä–º–∞—Ç–∞
      kizValues = processCSVFormat(lines);
    } else {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ TXT —Ñ–æ—Ä–º–∞—Ç–∞ (–æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫–µ)
      kizValues = processTXTFormat(lines);
    }
    
    return kizValues;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV
  function processCSVFormat(lines) {
    console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV...');
    addProgressMessage('–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV...');
    
    const kizValues = [];
    let kizRow = { values: [] };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    const firstLine = lines[0];
    const isHeader = firstLine.toLowerCase().includes('–∫–∏–∑') || 
                    firstLine.toLowerCase().includes('–∫–∏—Å') || 
                    firstLine.toLowerCase().includes('kiz') || 
                    firstLine.toLowerCase().includes('cis');
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Å–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏, –µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è - –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const startIndex = isHeader ? 1 : 0;
    
    for (let i = startIndex; i < lines.length; i++) {
      const line = lines[i].trim();
      if (line === '') continue;
      
      const values = parseCSVLine(line);
      
      // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –∫–∞–∫–∏–µ-–ª–∏–±–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–µ
      if (values && values.length > 0) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫–µ
        for (let j = 0; j < values.length; j++) {
          let value = values[j].trim();
          if (value) {
            kizRow.values.push(value);
          }
        }
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (kizRow.values.length > 0) {
      kizValues.push(kizRow);
    }
    
    return kizValues;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ TXT (–ø–æ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –≤ —Å—Ç—Ä–æ–∫–µ)
  function processTXTFormat(lines) {
    console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ TXT...');
    addProgressMessage('–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ TXT...');
    
    const kizValues = [];
    let kizRow = { values: [] };
    
    for (let i = 0; i < lines.length; i++) {
      const line = lines[i].trim();
      if (line === '') continue;
      
      // –í TXT —Ñ–∞–π–ª–µ - –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ–±—Ä–µ–∑–∞–µ–º –¥–æ 31 —Å–∏–º–≤–æ–ª–∞
      let value = line.substring(0, 31);
      
      if (value) {
        kizRow.values.push(value);
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (kizRow.values.length > 0) {
      kizValues.push(kizRow);
    }
    
    return kizValues;
  }
});
